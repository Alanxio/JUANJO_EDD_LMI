{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Inici"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"edd/document_1/","text":"Caracteristcas de documentos Documents en Text Pla Al poner file (archivo) en la terminal ser un ASCII text, por lo que esta en texto plano. Marques Inserides en el Contingut Si ya que tenemos diferentes tipos de marcas las cuales forman una estructuras para diferenciar las diferentes partes del archivo, como: \"path\", \"head\", \"g\", etc. Components Senzills i Intu\u00eftius Los lenguajes de marcas son muy sencillos e intuitivos, haciendo posible el facil aprendizaje y utilizaci\u00f3n de este ademas de poder optimizar y simplificar el archivo en el cual estamos trabajando. Versatilitat i \u00c0mbit d'Utilitzaci\u00f3 Extens Los lenguajes de marcas son muy versatiles ya que tiene una capacidad de utilizaci\u00f3n muy grande pudiendo utilizar muchos formatos y programas para interpretarlos, como: \"xml\", \"svg\", \"odt\", ect. Etiquetes Identificatives del Tipus de Contingut Para casi cada funci\u00f3n hay una etiqueta \u00fanica que la identifica as\u00ed haciendo mas facil la comprensi\u00f3n de el codigo y hace mas sencilla la estructuraci\u00f3n y visibilidad de las diferentes partes del codigo, as\u00ed como: \"title\", \"head\", \"body\".","title":"Caracteristcas de documentos"},{"location":"edd/document_1/#caracteristcas-de-documentos","text":"Documents en Text Pla Al poner file (archivo) en la terminal ser un ASCII text, por lo que esta en texto plano. Marques Inserides en el Contingut Si ya que tenemos diferentes tipos de marcas las cuales forman una estructuras para diferenciar las diferentes partes del archivo, como: \"path\", \"head\", \"g\", etc. Components Senzills i Intu\u00eftius Los lenguajes de marcas son muy sencillos e intuitivos, haciendo posible el facil aprendizaje y utilizaci\u00f3n de este ademas de poder optimizar y simplificar el archivo en el cual estamos trabajando. Versatilitat i \u00c0mbit d'Utilitzaci\u00f3 Extens Los lenguajes de marcas son muy versatiles ya que tiene una capacidad de utilizaci\u00f3n muy grande pudiendo utilizar muchos formatos y programas para interpretarlos, como: \"xml\", \"svg\", \"odt\", ect. Etiquetes Identificatives del Tipus de Contingut Para casi cada funci\u00f3n hay una etiqueta \u00fanica que la identifica as\u00ed haciendo mas facil la comprensi\u00f3n de el codigo y hace mas sencilla la estructuraci\u00f3n y visibilidad de las diferentes partes del codigo, as\u00ed como: \"title\", \"head\", \"body\".","title":"Caracteristcas de documentos"},{"location":"edd/document_2/","text":"Desenvolupament d'una App: Llenguatges, Tecnologies i Enfocaments Per desenvolupar una aplicaci\u00f3 m\u00f2bil eficient, \u00e9s essencial planificar l'\u00fas de llenguatges i tecnologies basats en els objectius del projecte. A continuaci\u00f3 es descriuen els passos b\u00e0sics per abordar aquest proc\u00e9s. 1. Elecci\u00f3 de Tipus d'Aplicaci\u00f3 El primer pas \u00e9s decidir quin tipus d'aplicaci\u00f3 es vol desenvolupar: Aplicaci\u00f3 Nativa : Es desenvolupa espec\u00edficament per a Android (Kotlin/Java) o iOS (Swift). Ofereix millor rendiment i integraci\u00f3 amb funcionalitats natives del dispositiu. Aplicaci\u00f3 Multiplataforma : Amb tecnologies com React Native o Flutter , es pot utilitzar un sol codi per a diverses plataformes, reduint costos i temps de desenvolupament. Aplicaci\u00f3 Web : Amb PWA (Progressive Web Apps), es crea una aplicaci\u00f3 web que pot funcionar com a app m\u00f2bil, oferint m\u00e9s flexibilitat per\u00f2 amb menys acc\u00e9s a funcions natives. 2. Llenguatges i Tecnologies Recomanats Dependr\u00e0 del tipus d\u2019aplicaci\u00f3 que es desenvolupi: Kotlin o Java per a Android. Swift per a iOS. React Native (JavaScript/TypeScript) o Flutter (Dart) per a apps multiplataforma. HTML5 , CSS3 , JavaScript per a aplicacions web. 3. Estructura i Arquitectura Cal definir l'arquitectura de l'aplicaci\u00f3. Els patrons com MVC (Model-View-Controller) o MVVM (Model-View-ViewModel) s\u00f3n comuns per mantenir el codi organitzat i escalable. Backend : Serveis com Node.js , Django , o Spring Boot gestionen la l\u00f2gica del servidor i base de dades. Bases de dades : Relacionals (PostgreSQL, MySQL) o NoSQL (MongoDB, Firebase) segons les necessitats. 4. Metodologia de Desenvolupament L\u2019\u00fas d\u2019una metodologia Agile com Scrum o Kanban \u00e9s essencial per garantir que l'aplicaci\u00f3 es desenvolupi de manera iterativa i adaptativa, amb llan\u00e7aments freq\u00fcents i millores constants. 5. Proves i Desplegament Un cop desenvolupada, l'app ha de passar per rigoroses proves, incloent tests unit\u00e0ries , d'integraci\u00f3 i d'experi\u00e8ncia d'usuari. Un cop superades, es desplega a les plataformes corresponents (Google Play, App Store). Conclusi\u00f3 El desenvolupament d'una aplicaci\u00f3 requereix una elecci\u00f3 acurada de llenguatges, tecnologies i metodologies segons els objectius i el p\u00fablic objectiu.","title":"Desenvolupament d'una App"},{"location":"edd/document_2/#desenvolupament-duna-app-llenguatges-tecnologies-i-enfocaments","text":"Per desenvolupar una aplicaci\u00f3 m\u00f2bil eficient, \u00e9s essencial planificar l'\u00fas de llenguatges i tecnologies basats en els objectius del projecte. A continuaci\u00f3 es descriuen els passos b\u00e0sics per abordar aquest proc\u00e9s.","title":"Desenvolupament d'una App: Llenguatges, Tecnologies i Enfocaments"},{"location":"edd/document_2/#1-eleccio-de-tipus-daplicacio","text":"El primer pas \u00e9s decidir quin tipus d'aplicaci\u00f3 es vol desenvolupar: Aplicaci\u00f3 Nativa : Es desenvolupa espec\u00edficament per a Android (Kotlin/Java) o iOS (Swift). Ofereix millor rendiment i integraci\u00f3 amb funcionalitats natives del dispositiu. Aplicaci\u00f3 Multiplataforma : Amb tecnologies com React Native o Flutter , es pot utilitzar un sol codi per a diverses plataformes, reduint costos i temps de desenvolupament. Aplicaci\u00f3 Web : Amb PWA (Progressive Web Apps), es crea una aplicaci\u00f3 web que pot funcionar com a app m\u00f2bil, oferint m\u00e9s flexibilitat per\u00f2 amb menys acc\u00e9s a funcions natives.","title":"1. Elecci\u00f3 de Tipus d'Aplicaci\u00f3"},{"location":"edd/document_2/#2-llenguatges-i-tecnologies-recomanats","text":"Dependr\u00e0 del tipus d\u2019aplicaci\u00f3 que es desenvolupi: Kotlin o Java per a Android. Swift per a iOS. React Native (JavaScript/TypeScript) o Flutter (Dart) per a apps multiplataforma. HTML5 , CSS3 , JavaScript per a aplicacions web.","title":"2. Llenguatges i Tecnologies Recomanats"},{"location":"edd/document_2/#3-estructura-i-arquitectura","text":"Cal definir l'arquitectura de l'aplicaci\u00f3. Els patrons com MVC (Model-View-Controller) o MVVM (Model-View-ViewModel) s\u00f3n comuns per mantenir el codi organitzat i escalable. Backend : Serveis com Node.js , Django , o Spring Boot gestionen la l\u00f2gica del servidor i base de dades. Bases de dades : Relacionals (PostgreSQL, MySQL) o NoSQL (MongoDB, Firebase) segons les necessitats.","title":"3. Estructura i Arquitectura"},{"location":"edd/document_2/#4-metodologia-de-desenvolupament","text":"L\u2019\u00fas d\u2019una metodologia Agile com Scrum o Kanban \u00e9s essencial per garantir que l'aplicaci\u00f3 es desenvolupi de manera iterativa i adaptativa, amb llan\u00e7aments freq\u00fcents i millores constants.","title":"4. Metodologia de Desenvolupament"},{"location":"edd/document_2/#5-proves-i-desplegament","text":"Un cop desenvolupada, l'app ha de passar per rigoroses proves, incloent tests unit\u00e0ries , d'integraci\u00f3 i d'experi\u00e8ncia d'usuari. Un cop superades, es desplega a les plataformes corresponents (Google Play, App Store).","title":"5. Proves i Desplegament"},{"location":"edd/document_2/#conclusio","text":"El desenvolupament d'una aplicaci\u00f3 requereix una elecci\u00f3 acurada de llenguatges, tecnologies i metodologies segons els objectius i el p\u00fablic objectiu.","title":"Conclusi\u00f3"},{"location":"edd/document_3/","text":"1. Python3 L'ordre python3 s'utilitza per executar fitxers de Python 3 des de la l\u00ednia de comandes. # Executar un script Python python3 script.py 2. cc (C Compiler) cc \u00e9s l'ordre per compilar programes en C. Tamb\u00e9 s'utilitzen compiladors com gcc (GNU Compiler Collection). # Compilar un programa en C cc programa.c -o programa_executable 3. java L'ordre java s'utilitza per executar aplicacions Java ja compilades. # Executar una classe Java java NomClasse 4. javac javac \u00e9s l'ordre per compilar el codi Java abans d'executar-lo amb java . # Compilar un fitxer Java javac NomClasse.java Aquestes ordres s\u2019utilitzen per desenvolupar i executar aplicacions en diferents llenguatges de programaci\u00f3.","title":"Exemples de traducci\u00f3"},{"location":"edd/document_3/#1-python3","text":"L'ordre python3 s'utilitza per executar fitxers de Python 3 des de la l\u00ednia de comandes. # Executar un script Python python3 script.py","title":"1. Python3"},{"location":"edd/document_3/#2-cc-c-compiler","text":"cc \u00e9s l'ordre per compilar programes en C. Tamb\u00e9 s'utilitzen compiladors com gcc (GNU Compiler Collection). # Compilar un programa en C cc programa.c -o programa_executable","title":"2. cc (C Compiler)"},{"location":"edd/document_3/#3-java","text":"L'ordre java s'utilitza per executar aplicacions Java ja compilades. # Executar una classe Java java NomClasse","title":"3. java"},{"location":"edd/document_3/#4-javac","text":"javac \u00e9s l'ordre per compilar el codi Java abans d'executar-lo amb java . # Compilar un fitxer Java javac NomClasse.java Aquestes ordres s\u2019utilitzen per desenvolupar i executar aplicacions en diferents llenguatges de programaci\u00f3.","title":"4. javac"},{"location":"edd/document_4/","text":"Efecte Bola de Neu en el Desenvolupament d'Entorns Inform\u00e0tics L'efecte bola de neu en desenvolupament inform\u00e0tic descriu com petits problemes o decisions poden cr\u00e9ixer exponencialment i generar complicacions majors al llarg del projecte. Aquest fenomen es manifesta especialment en les \u00e0rees seg\u00fcents: Deute t\u00e8cnic : Errors de disseny o codi poc net a les primeres fases poden acumular-se, fent que el codi es torni ineficient i dif\u00edcil de mantenir, exigint una major inversi\u00f3 de temps i recursos per solucionar-ho en el futur. Escalabilitat : Sistemes que no es dissenyen amb l\u2019escalabilitat en ment poden trobar problemes greus de rendiment a mesura que la base d\u2019usuaris o el volum de dades augmenta, causant colls d\u2019ampolla. Seguretat : Vulnerabilitats menors ignorades poden convertir-se en greus amenaces a mesura que el projecte avan\u00e7a, deixant el sistema exposat a atacs. Depend\u00e8ncies : Actualitzacions o incompatibilitats en biblioteques externes poden requerir canvis en m\u00faltiples components del sistema, amplificant l'impacte d'un petit canvi. Com Mitigar l'Efecte Bola de Neu Disseny escalable des de l'inici. Refactoritzaci\u00f3 cont\u00ednua del codi per mantenir-lo net i f\u00e0cil de mantenir. Gesti\u00f3 del deute t\u00e8cnic de manera proactiva. Realitzaci\u00f3 de tests peri\u00f2dics per garantir la seguretat i el bon funcionament del sistema. Aquestes pr\u00e0ctiques ajuden a controlar l'efecte bola de neu i evitar que petits problemes es converteixin en fallades greus durant el desenvolupament.","title":"L'efecte Bola de neu"},{"location":"edd/document_4/#efecte-bola-de-neu-en-el-desenvolupament-dentorns-informatics","text":"L'efecte bola de neu en desenvolupament inform\u00e0tic descriu com petits problemes o decisions poden cr\u00e9ixer exponencialment i generar complicacions majors al llarg del projecte. Aquest fenomen es manifesta especialment en les \u00e0rees seg\u00fcents: Deute t\u00e8cnic : Errors de disseny o codi poc net a les primeres fases poden acumular-se, fent que el codi es torni ineficient i dif\u00edcil de mantenir, exigint una major inversi\u00f3 de temps i recursos per solucionar-ho en el futur. Escalabilitat : Sistemes que no es dissenyen amb l\u2019escalabilitat en ment poden trobar problemes greus de rendiment a mesura que la base d\u2019usuaris o el volum de dades augmenta, causant colls d\u2019ampolla. Seguretat : Vulnerabilitats menors ignorades poden convertir-se en greus amenaces a mesura que el projecte avan\u00e7a, deixant el sistema exposat a atacs. Depend\u00e8ncies : Actualitzacions o incompatibilitats en biblioteques externes poden requerir canvis en m\u00faltiples components del sistema, amplificant l'impacte d'un petit canvi.","title":"Efecte Bola de Neu en el Desenvolupament d'Entorns Inform\u00e0tics"},{"location":"edd/document_4/#com-mitigar-lefecte-bola-de-neu","text":"Disseny escalable des de l'inici. Refactoritzaci\u00f3 cont\u00ednua del codi per mantenir-lo net i f\u00e0cil de mantenir. Gesti\u00f3 del deute t\u00e8cnic de manera proactiva. Realitzaci\u00f3 de tests peri\u00f2dics per garantir la seguretat i el bon funcionament del sistema. Aquestes pr\u00e0ctiques ajuden a controlar l'efecte bola de neu i evitar que petits problemes es converteixin en fallades greus durant el desenvolupament.","title":"Com Mitigar l'Efecte Bola de Neu"},{"location":"edd/document_5/","text":"Fases del Projecte de Desenvolupament d'una P\u00e0gina Web Per crear la p\u00e0gina web per a l'empresa, el proc\u00e9s es dividiria en les seg\u00fcents fases, utilitzant un model iteratiu-incremental o en espiral , degut a la necessitat de reunions freq\u00fcents amb l'empresa i la validaci\u00f3 cont\u00ednua: 1. An\u00e0lisi de Requisits Identificaci\u00f3 dels objectius del lloc web. Recopilaci\u00f3 de la informaci\u00f3 necess\u00e0ria sobre l'empresa i els departaments. 2. Disseny Esborrany de l'estructura i navegaci\u00f3 de la web. Definici\u00f3 de l'experi\u00e8ncia d'usuari (UX) i la interf\u00edcie gr\u00e0fica (UI). 3. Desenvolupament Codificaci\u00f3 del frontend (HTML, CSS, JavaScript). Implementaci\u00f3 del backend (bases de dades, API, servidors). 4. Proves i Validaci\u00f3 Revisions amb l'empresa per validar el treball. Tests de funcionalitat, usabilitat i rendiment. 5. Implementaci\u00f3 i Manteniment Desplegament de la p\u00e0gina web. Manteniment continu i actualitzacions segons feedback. Model de Desenvolupament Recomanat El model iteratiu-incremental permet lliuraments parcials i validaci\u00f3 constant amb l'empresa, assegurant que cada versi\u00f3 millori amb els seus comentaris.","title":"Projecte de Desenvolupament d'una P\u00e0gina Web"},{"location":"edd/document_5/#fases-del-projecte-de-desenvolupament-duna-pagina-web","text":"Per crear la p\u00e0gina web per a l'empresa, el proc\u00e9s es dividiria en les seg\u00fcents fases, utilitzant un model iteratiu-incremental o en espiral , degut a la necessitat de reunions freq\u00fcents amb l'empresa i la validaci\u00f3 cont\u00ednua:","title":"Fases del Projecte de Desenvolupament d'una P\u00e0gina Web"},{"location":"edd/document_5/#1-analisi-de-requisits","text":"Identificaci\u00f3 dels objectius del lloc web. Recopilaci\u00f3 de la informaci\u00f3 necess\u00e0ria sobre l'empresa i els departaments.","title":"1. An\u00e0lisi de Requisits"},{"location":"edd/document_5/#2-disseny","text":"Esborrany de l'estructura i navegaci\u00f3 de la web. Definici\u00f3 de l'experi\u00e8ncia d'usuari (UX) i la interf\u00edcie gr\u00e0fica (UI).","title":"2. Disseny"},{"location":"edd/document_5/#3-desenvolupament","text":"Codificaci\u00f3 del frontend (HTML, CSS, JavaScript). Implementaci\u00f3 del backend (bases de dades, API, servidors).","title":"3. Desenvolupament"},{"location":"edd/document_5/#4-proves-i-validacio","text":"Revisions amb l'empresa per validar el treball. Tests de funcionalitat, usabilitat i rendiment.","title":"4. Proves i Validaci\u00f3"},{"location":"edd/document_5/#5-implementacio-i-manteniment","text":"Desplegament de la p\u00e0gina web. Manteniment continu i actualitzacions segons feedback.","title":"5. Implementaci\u00f3 i Manteniment"},{"location":"edd/document_5/#model-de-desenvolupament-recomanat","text":"El model iteratiu-incremental permet lliuraments parcials i validaci\u00f3 constant amb l'empresa, assegurant que cada versi\u00f3 millori amb els seus comentaris.","title":"Model de Desenvolupament Recomanat"},{"location":"edd/document_6/","text":"El problema que s'ha manifestat durant la revisi\u00f3 de sprint sembla resultat d'un desajust entre les expectatives del Product Owner i la capacitat de l'equip . El Scrum Master ja havia advertit sobre la sobrec\u00e0rrega de certs equips, per\u00f2 el Product Owner va prioritzar entregar r\u00e0pidament tasques que el client volia veure finalitzades. Possible Situaci\u00f3: Mala planificaci\u00f3 de la c\u00e0rrega de treball : El Product Owner va prioritzar la velocitat sobre la capacitat real de l'equip, causant sobrec\u00e0rrega. Aix\u00f2 podria haver afectat la qualitat o l'incompliment de terminis en algunes tasques. Expectatives poc realistes : Potser no es va ajustar adequadament la backlog per fer front a la capacitat disponible, deixant algunes tasques sense completament o amb problemes. Falta de negociaci\u00f3 : L'equip i el Scrum Master van detectar la sobrec\u00e0rrega, per\u00f2 potser el Product Owner no va negociar prou les expectatives amb el client per ajustar-se a la realitat del ritme de treball de l'equip. Soluci\u00f3: En futurs sprints, \u00e9s essencial que el Product Owner i el Scrum Master aline\u00efn millor les prioritats amb la capacitat de l'equip , assegurant que les tasques s\u00f3n assumibles i que els objectius del client es gestionin amb m\u00e9s realisme.","title":"Scrum"},{"location":"edd/document_6/#possible-situacio","text":"Mala planificaci\u00f3 de la c\u00e0rrega de treball : El Product Owner va prioritzar la velocitat sobre la capacitat real de l'equip, causant sobrec\u00e0rrega. Aix\u00f2 podria haver afectat la qualitat o l'incompliment de terminis en algunes tasques. Expectatives poc realistes : Potser no es va ajustar adequadament la backlog per fer front a la capacitat disponible, deixant algunes tasques sense completament o amb problemes. Falta de negociaci\u00f3 : L'equip i el Scrum Master van detectar la sobrec\u00e0rrega, per\u00f2 potser el Product Owner no va negociar prou les expectatives amb el client per ajustar-se a la realitat del ritme de treball de l'equip.","title":"Possible Situaci\u00f3:"},{"location":"edd/document_6/#solucio","text":"En futurs sprints, \u00e9s essencial que el Product Owner i el Scrum Master aline\u00efn millor les prioritats amb la capacitat de l'equip , assegurant que les tasques s\u00f3n assumibles i que els objectius del client es gestionin amb m\u00e9s realisme.","title":"Soluci\u00f3:"},{"location":"lmi/Caract._LenguajeMarcas/","text":"Caracter\u00edstiques dels llenguatges de marques 1. HTML (HyperText Markup Language) HTML \u00e9s el llenguatge de marques est\u00e0ndard per crear p\u00e0gines web i aplicacions web. Finalitat : Descripci\u00f3 de l'estructura de documents web. Etiquetes : Es basa en etiquetes predefinides (com <p> , <div> , <h1> , <a> , etc.) que representen elements del document. Estructura : Els documents HTML tenen una estructura jer\u00e0rquica basada en un arbre de nodes DOM (Document Object Model). Enlla\u00e7os i multim\u00e8dia : Permet integrar enlla\u00e7os hipertext, imatges, v\u00eddeos, i altres continguts multim\u00e8dia dins el document. Estils i scripts : Permet incrustar o enlla\u00e7ar CSS (per donar estil) i JavaScript (per donar funcionalitat). Versionat : La versi\u00f3 m\u00e9s recent \u00e9s HTML5, que introdueix noves etiquetes sem\u00e0ntiques (com <article> , <section> , <header> , etc.). Extensions : Pot treballar amb altres tecnologies web com SVG, MathML, o Web Components. 2. SVG (Scalable Vector Graphics) SVG \u00e9s un llenguatge de marques per descriure gr\u00e0fics vectorials escalables. Finalitat : Representaci\u00f3 de gr\u00e0fics vectorials en dos dimensions. Format : \u00c9s un format XML, de manera que els gr\u00e0fics SVG s\u00f3n tamb\u00e9 documents llegibles per m\u00e0quina. Estructura : Es basa en etiquetes com <circle> , <rect> , <path> , <polygon> , entre d'altres, que defineixen formes gr\u00e0fiques. Escalabilitat : Els gr\u00e0fics s\u00f3n escalables sense p\u00e8rdua de qualitat, ja que es basen en vectors i no en p\u00edxels. Interactivitat : Permet incloure scripts (com JavaScript) per fer els gr\u00e0fics interactius. Estils : Les formes es poden estilitzar mitjan\u00e7ant atributs de les etiquetes o amb CSS extern. Animaci\u00f3 : Ofereix suports per animacions vectorials mitjan\u00e7ant elements com <animate> , <animateTransform> , etc. 3. XML (Extensible Markup Language) XML \u00e9s un llenguatge de marques dissenyat per emmagatzemar i transportar dades de forma estructurada. Finalitat : Emmagatzematge i transport de dades en un format llegible tant per m\u00e0quines com per humans. Estructura : \u00c9s extensible i flexible, ja que permet definir etiquetes personalitzades. Autocontingut : Les etiquetes proporcionen informaci\u00f3 tant sobre les dades com sobre l'estructura de les mateixes dades. Validaci\u00f3 : Els documents XML poden ser validats mitjan\u00e7ant esquemes com DTD (Document Type Definition) o XSD (XML Schema Definition). Universalitat : Pot ser utilitzat en una gran varietat d'aplicacions, des de serveis web fins a formats de fitxers com RSS, SOAP, i m\u00e9s. Suport per arbres jer\u00e0rquics : Els documents es construeixen en un format d'arbre que cont\u00e9 elements niats. 4. XHTML (Extensible HyperText Markup Language) XHTML \u00e9s una combinaci\u00f3 d'HTML i XML, que ofereix les funcions d'HTML dins la rigorositat estructural d'XML. Finalitat : Millorar la interoperabilitat entre navegadors i eines XML. Estructura : Similar a HTML, per\u00f2 amb normes m\u00e9s estrictes, com la necessitat de tancar totes les etiquetes ( <br /> , <img /> ) i respectar la maj\u00fascula/min\u00fascula. Compatibilitat : Els documents XHTML es poden processar tant com HTML com XML, depenent del context. Est\u00e0ndards : Les versions modernes d'HTML poden incloure moltes de les caracter\u00edstiques de XHTML. 5. MathML (Mathematical Markup Language) MathML \u00e9s un llenguatge de marques per descriure notacions matem\u00e0tiques i el seu contingut. Finalitat : Representaci\u00f3 de f\u00f3rmules matem\u00e0tiques en documents web. Etiquetes : Cont\u00e9 etiquetes especialitzades com <math> , <mfrac> , <msup> , <mi> , etc., per estructurar les expressions matem\u00e0tiques. Interoperabilitat : Es pot integrar amb HTML o XML, permetent que les f\u00f3rmules siguin visualitzades en p\u00e0gines web. Estils : Com a llenguatge XML, pot ser estilitzat amb CSS. Precisi\u00f3 : Est\u00e0 dissenyat per transmetre f\u00f3rmules matem\u00e0tiques amb un alt grau de precisi\u00f3. 6. YAML (YAML Ain't Markup Language) Encara que t\u00e8cnicament no \u00e9s un llenguatge de marques, YAML s'utilitza per la configuraci\u00f3 de dades estructurades. Finalitat : Emmagatzemar dades de manera simple, principalment per a configuracions de programari. Sintaxi : Utilitza indentaci\u00f3 en lloc d'etiquetes i \u00e9s m\u00e9s llegible per humans. Estructura : Les dades s'organitzen en clau-valor, llistes i diccionaris. Compatibilitat : Pot ser convertit f\u00e0cilment a JSON, XML o altres formats de dades estructurades. Simplicitat : \u00c9s m\u00e9s minimalista que XML o JSON i \u00e9s molt utilitzat per fitxers de configuraci\u00f3 com Docker o CI/CD. Aquestes s\u00f3n algunes de les caracter\u00edstiques essencials dels llenguatges de marques que es fan servir en diversos \u00e0mbits, des del web fins al processament de dades.","title":"Caract. Lenguajes de Marcas"},{"location":"lmi/Caract._LenguajeMarcas/#caracteristiques-dels-llenguatges-de-marques","text":"","title":"Caracter\u00edstiques dels llenguatges de marques"},{"location":"lmi/Caract._LenguajeMarcas/#1-html-hypertext-markup-language","text":"HTML \u00e9s el llenguatge de marques est\u00e0ndard per crear p\u00e0gines web i aplicacions web. Finalitat : Descripci\u00f3 de l'estructura de documents web. Etiquetes : Es basa en etiquetes predefinides (com <p> , <div> , <h1> , <a> , etc.) que representen elements del document. Estructura : Els documents HTML tenen una estructura jer\u00e0rquica basada en un arbre de nodes DOM (Document Object Model). Enlla\u00e7os i multim\u00e8dia : Permet integrar enlla\u00e7os hipertext, imatges, v\u00eddeos, i altres continguts multim\u00e8dia dins el document. Estils i scripts : Permet incrustar o enlla\u00e7ar CSS (per donar estil) i JavaScript (per donar funcionalitat). Versionat : La versi\u00f3 m\u00e9s recent \u00e9s HTML5, que introdueix noves etiquetes sem\u00e0ntiques (com <article> , <section> , <header> , etc.). Extensions : Pot treballar amb altres tecnologies web com SVG, MathML, o Web Components.","title":"1. HTML (HyperText Markup Language)"},{"location":"lmi/Caract._LenguajeMarcas/#2-svg-scalable-vector-graphics","text":"SVG \u00e9s un llenguatge de marques per descriure gr\u00e0fics vectorials escalables. Finalitat : Representaci\u00f3 de gr\u00e0fics vectorials en dos dimensions. Format : \u00c9s un format XML, de manera que els gr\u00e0fics SVG s\u00f3n tamb\u00e9 documents llegibles per m\u00e0quina. Estructura : Es basa en etiquetes com <circle> , <rect> , <path> , <polygon> , entre d'altres, que defineixen formes gr\u00e0fiques. Escalabilitat : Els gr\u00e0fics s\u00f3n escalables sense p\u00e8rdua de qualitat, ja que es basen en vectors i no en p\u00edxels. Interactivitat : Permet incloure scripts (com JavaScript) per fer els gr\u00e0fics interactius. Estils : Les formes es poden estilitzar mitjan\u00e7ant atributs de les etiquetes o amb CSS extern. Animaci\u00f3 : Ofereix suports per animacions vectorials mitjan\u00e7ant elements com <animate> , <animateTransform> , etc.","title":"2. SVG (Scalable Vector Graphics)"},{"location":"lmi/Caract._LenguajeMarcas/#3-xml-extensible-markup-language","text":"XML \u00e9s un llenguatge de marques dissenyat per emmagatzemar i transportar dades de forma estructurada. Finalitat : Emmagatzematge i transport de dades en un format llegible tant per m\u00e0quines com per humans. Estructura : \u00c9s extensible i flexible, ja que permet definir etiquetes personalitzades. Autocontingut : Les etiquetes proporcionen informaci\u00f3 tant sobre les dades com sobre l'estructura de les mateixes dades. Validaci\u00f3 : Els documents XML poden ser validats mitjan\u00e7ant esquemes com DTD (Document Type Definition) o XSD (XML Schema Definition). Universalitat : Pot ser utilitzat en una gran varietat d'aplicacions, des de serveis web fins a formats de fitxers com RSS, SOAP, i m\u00e9s. Suport per arbres jer\u00e0rquics : Els documents es construeixen en un format d'arbre que cont\u00e9 elements niats.","title":"3. XML (Extensible Markup Language)"},{"location":"lmi/Caract._LenguajeMarcas/#4-xhtml-extensible-hypertext-markup-language","text":"XHTML \u00e9s una combinaci\u00f3 d'HTML i XML, que ofereix les funcions d'HTML dins la rigorositat estructural d'XML. Finalitat : Millorar la interoperabilitat entre navegadors i eines XML. Estructura : Similar a HTML, per\u00f2 amb normes m\u00e9s estrictes, com la necessitat de tancar totes les etiquetes ( <br /> , <img /> ) i respectar la maj\u00fascula/min\u00fascula. Compatibilitat : Els documents XHTML es poden processar tant com HTML com XML, depenent del context. Est\u00e0ndards : Les versions modernes d'HTML poden incloure moltes de les caracter\u00edstiques de XHTML.","title":"4. XHTML (Extensible HyperText Markup Language)"},{"location":"lmi/Caract._LenguajeMarcas/#5-mathml-mathematical-markup-language","text":"MathML \u00e9s un llenguatge de marques per descriure notacions matem\u00e0tiques i el seu contingut. Finalitat : Representaci\u00f3 de f\u00f3rmules matem\u00e0tiques en documents web. Etiquetes : Cont\u00e9 etiquetes especialitzades com <math> , <mfrac> , <msup> , <mi> , etc., per estructurar les expressions matem\u00e0tiques. Interoperabilitat : Es pot integrar amb HTML o XML, permetent que les f\u00f3rmules siguin visualitzades en p\u00e0gines web. Estils : Com a llenguatge XML, pot ser estilitzat amb CSS. Precisi\u00f3 : Est\u00e0 dissenyat per transmetre f\u00f3rmules matem\u00e0tiques amb un alt grau de precisi\u00f3.","title":"5. MathML (Mathematical Markup Language)"},{"location":"lmi/Caract._LenguajeMarcas/#6-yaml-yaml-aint-markup-language","text":"Encara que t\u00e8cnicament no \u00e9s un llenguatge de marques, YAML s'utilitza per la configuraci\u00f3 de dades estructurades. Finalitat : Emmagatzemar dades de manera simple, principalment per a configuracions de programari. Sintaxi : Utilitza indentaci\u00f3 en lloc d'etiquetes i \u00e9s m\u00e9s llegible per humans. Estructura : Les dades s'organitzen en clau-valor, llistes i diccionaris. Compatibilitat : Pot ser convertit f\u00e0cilment a JSON, XML o altres formats de dades estructurades. Simplicitat : \u00c9s m\u00e9s minimalista que XML o JSON i \u00e9s molt utilitzat per fitxers de configuraci\u00f3 com Docker o CI/CD. Aquestes s\u00f3n algunes de les caracter\u00edstiques essencials dels llenguatges de marques que es fan servir en diversos \u00e0mbits, des del web fins al processament de dades.","title":"6. YAML (YAML Ain't Markup Language)"},{"location":"lmi/espaisnoms/","text":"Identificaci\u00f3 dels espais de noms en documents XML Qu\u00e8 \u00e9s un espai de noms (namespace)? Un espai de noms en XML serveix per evitar conflictes d'etiquetes quan es fan servir diferents vocabularis o conjunts d'elements en un mateix document. S'identifiquen mitjan\u00e7ant URI (Uniform Resource Identifier) i es declaren habitualment en l'etiqueta arrel del document. Com es defineixen els espais de noms? Els espais de noms es declaren amb l'atribut xmlns seguit d'un prefix opcional. Aquest atribut indica que tots els elements i atributs sota el document utilitzaran un espai de noms espec\u00edfic. <elemento xmlns=\"http://exemple.com/namespace\"> <!-- El contingut utilitza l'espai de noms especificat --> </elemento> Els espais de noms amb prefix es defineixen aix\u00ed: <elemento xmlns:prefix=\"http://exemple.com/namespace\"> <prefix:subelemento>Contingut</prefix:subelemento> </elemento> Espais de noms a AndroidManifest.xml En Android, l' AndroidManifest.xml defineix la informaci\u00f3 b\u00e0sica d'una aplicaci\u00f3, i utilitza diversos espais de noms per a diferents conjunts d'atributs i elements. Exemple b\u00e0sic d'un AndroidManifest.xml <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.exemple.aplicacio\"> <application android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\"> <activity android:name=\".MainActivity\"> <intent-filter> <action android:name=\"android.intent.action.MAIN\" /> <category android:name=\"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Espais de noms utilitzats en AndroidManifest.xml Espai de noms \"android\" ( xmlns:android ) Declaraci\u00f3 : xmlns:android=\"http://schemas.android.com/apk/res/android\" Funci\u00f3 : S'utilitza per a tots els atributs relacionats amb Android, com ara android:label , android:icon , android:name , entre d'altres. Atributs comuns : android:label : Defineix el nom que es mostra per a l'aplicaci\u00f3. android:icon : Defineix la icona de l'aplicaci\u00f3. android:name : S'utilitza per definir el nom complet d'una activitat, servei, etc. Espai de noms per a altres biblioteques o frameworks Quan s'integren biblioteques de tercers o frameworks, es poden definir altres espais de noms per a aquestes extensions. Per exemple, si una aplicaci\u00f3 fa servir el suport de la biblioteca tools , es podria declarar un espai de noms addicional. ```xml <application android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" tools:ignore=\"UnusedAttribute\"> <!-- Configuraci\u00f3 addicional --> </application> `` - **Atributs comuns**: - tools:ignore`: S'utilitza per ignorar avisos o errors que mostra el sistema d'eines d'Android. Espai de noms personalitzat (opcional) En alguns casos, es poden crear espais de noms personalitzats per a recursos o atributs especials. No \u00e9s com\u00fa a l' AndroidManifest.xml , per\u00f2 podria utilitzar-se en altres fitxers XML que defineixen configuracions d'aplicacions. Utilitat dels espais de noms en AndroidManifest.xml Distinci\u00f3 entre atributs d'Android i altres atributs : Per exemple, l'atribut android:name dins d'una etiqueta activity indica que l'atribut pertany al conjunt d'atributs del sistema Android. Compatibilitat i extensibilitat : Permet afegir altres espais de noms per a biblioteques de tercers o extensions sense interferir amb els atributs natius d'Android. Clarificaci\u00f3 del context : Els espais de noms asseguren que cada atribut s'interpreti correctament segons el seu context. Conclusi\u00f3 Els espais de noms s\u00f3n una part essencial per gestionar documents XML en Android. En l' AndroidManifest.xml , el m\u00e9s com\u00fa \u00e9s l'espai de noms xmlns:android , que s'utilitza per a tots els atributs natius d'Android. Tamb\u00e9 es poden utilitzar altres espais de noms per a biblioteques de tercers o eines, com xmlns:tools .","title":"Espais de noms en documents"},{"location":"lmi/espaisnoms/#identificacio-dels-espais-de-noms-en-documents-xml","text":"","title":"Identificaci\u00f3 dels espais de noms en documents XML"},{"location":"lmi/espaisnoms/#que-es-un-espai-de-noms-namespace","text":"Un espai de noms en XML serveix per evitar conflictes d'etiquetes quan es fan servir diferents vocabularis o conjunts d'elements en un mateix document. S'identifiquen mitjan\u00e7ant URI (Uniform Resource Identifier) i es declaren habitualment en l'etiqueta arrel del document.","title":"Qu\u00e8 \u00e9s un espai de noms (namespace)?"},{"location":"lmi/espaisnoms/#com-es-defineixen-els-espais-de-noms","text":"Els espais de noms es declaren amb l'atribut xmlns seguit d'un prefix opcional. Aquest atribut indica que tots els elements i atributs sota el document utilitzaran un espai de noms espec\u00edfic. <elemento xmlns=\"http://exemple.com/namespace\"> <!-- El contingut utilitza l'espai de noms especificat --> </elemento> Els espais de noms amb prefix es defineixen aix\u00ed: <elemento xmlns:prefix=\"http://exemple.com/namespace\"> <prefix:subelemento>Contingut</prefix:subelemento> </elemento>","title":"Com es defineixen els espais de noms?"},{"location":"lmi/espaisnoms/#espais-de-noms-a-androidmanifestxml","text":"En Android, l' AndroidManifest.xml defineix la informaci\u00f3 b\u00e0sica d'una aplicaci\u00f3, i utilitza diversos espais de noms per a diferents conjunts d'atributs i elements.","title":"Espais de noms a AndroidManifest.xml"},{"location":"lmi/espaisnoms/#exemple-basic-dun-androidmanifestxml","text":"<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.exemple.aplicacio\"> <application android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\"> <activity android:name=\".MainActivity\"> <intent-filter> <action android:name=\"android.intent.action.MAIN\" /> <category android:name=\"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"Exemple b\u00e0sic d'un AndroidManifest.xml"},{"location":"lmi/espaisnoms/#espais-de-noms-utilitzats-en-androidmanifestxml","text":"Espai de noms \"android\" ( xmlns:android ) Declaraci\u00f3 : xmlns:android=\"http://schemas.android.com/apk/res/android\" Funci\u00f3 : S'utilitza per a tots els atributs relacionats amb Android, com ara android:label , android:icon , android:name , entre d'altres. Atributs comuns : android:label : Defineix el nom que es mostra per a l'aplicaci\u00f3. android:icon : Defineix la icona de l'aplicaci\u00f3. android:name : S'utilitza per definir el nom complet d'una activitat, servei, etc. Espai de noms per a altres biblioteques o frameworks Quan s'integren biblioteques de tercers o frameworks, es poden definir altres espais de noms per a aquestes extensions. Per exemple, si una aplicaci\u00f3 fa servir el suport de la biblioteca tools , es podria declarar un espai de noms addicional. ```xml <application android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" tools:ignore=\"UnusedAttribute\"> <!-- Configuraci\u00f3 addicional --> </application> `` - **Atributs comuns**: - tools:ignore`: S'utilitza per ignorar avisos o errors que mostra el sistema d'eines d'Android. Espai de noms personalitzat (opcional) En alguns casos, es poden crear espais de noms personalitzats per a recursos o atributs especials. No \u00e9s com\u00fa a l' AndroidManifest.xml , per\u00f2 podria utilitzar-se en altres fitxers XML que defineixen configuracions d'aplicacions.","title":"Espais de noms utilitzats en AndroidManifest.xml"},{"location":"lmi/espaisnoms/#utilitat-dels-espais-de-noms-en-androidmanifestxml","text":"Distinci\u00f3 entre atributs d'Android i altres atributs : Per exemple, l'atribut android:name dins d'una etiqueta activity indica que l'atribut pertany al conjunt d'atributs del sistema Android. Compatibilitat i extensibilitat : Permet afegir altres espais de noms per a biblioteques de tercers o extensions sense interferir amb els atributs natius d'Android. Clarificaci\u00f3 del context : Els espais de noms asseguren que cada atribut s'interpreti correctament segons el seu context.","title":"Utilitat dels espais de noms en AndroidManifest.xml"},{"location":"lmi/espaisnoms/#conclusio","text":"Els espais de noms s\u00f3n una part essencial per gestionar documents XML en Android. En l' AndroidManifest.xml , el m\u00e9s com\u00fa \u00e9s l'espai de noms xmlns:android , que s'utilitza per a tots els atributs natius d'Android. Tamb\u00e9 es poden utilitzar altres espais de noms per a biblioteques de tercers o eines, com xmlns:tools .","title":"Conclusi\u00f3"}]}